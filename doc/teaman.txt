==============================================================================
                                                                 *teaman.config*

Config                                                                  *Config*


Config.new({overrides})                                             *Config.new*
    @brief constructs a new terminal config which can be handy to pass to the terminal constructor.

    Parameters: ~
        {overrides}  (table|nil)  @optional table to override the default config.

    Returns: ~
        (Config)


==============================================================================
                                                                   *teaman.init*

teaman                                                                  *teaman*


Terminals                                                            *Terminals*


teaman.add({config})                                                *teaman.add*
    @brief Add a terminal

    Parameters: ~
        {config}  (Config)  Config table

    Usage: ~
>lua
        require'teaman'.add(require'teaman.config'.new())
<


teaman.remove({term})                                            *teaman.remove*
    @brief remove a terminal

    Parameters: ~
        {term}  (Terminal)  table


teaman.list()                                                      *teaman.list*
    @brief list all terminals

    Returns: ~
        (Terminals)  of Terminal objects


teaman.filter({predicate})                                       *teaman.filter*
    @brief filter terminals

    Parameters: ~
        {predicate}  (function)  Predicate function used to filter the terminals

    Returns: ~
        (Terminals)  of Terminal objects


teaman.map({f})                                                     *teaman.map*
    @brief apply a function for all terminals

    Parameters: ~
        {f}  (function)  Function acting on a terminal object

    Returns: ~
        (Terminals)  of Terminal objects


==============================================================================
                                                               *teaman.terminal*

Terminal                                                              *Terminal*


Terminal:create()                                              *Terminal:create*
    @brief creates a new terminal without opening a window


Terminal:open()                                                  *Terminal:open*
    @brief opens the terminal window and opens a new terminal if it does not already exist


Terminal:close()                                                *Terminal:close*
    @brief close the terminal window (does not close the terminal)


Terminal:toggle()                                              *Terminal:toggle*
    @brief toggle the terminal window


Terminal:quit()                                                  *Terminal:quit*
    @brief quit the terminal session (quits the terminal session and deletes the buffer)


Terminal:send_text({cmd})                                   *Terminal:send_text*

    Parameters: ~
        {cmd}  (string)  @send text to terminal without newline


Terminal:send_line({line})                                  *Terminal:send_line*

    Parameters: ~
        {line}  (string)  @send text to terminal with newline


Terminal:send_motion({motion})                            *Terminal:send_motion*

    Parameters: ~
        {motion}  (string)  @type of vim motion


Terminal.new({config})                                            *Terminal.new*
    @brief constructs a new terminal object

    Parameters: ~
        {config}  (table)  @config table

    Returns: ~
        (Terminal)


==============================================================================
                                                                  *teaman.utils*

utils.range()                                                      *utils.range*


utils.covered_lines()                                      *utils.covered_lines*


utils.with_restore_current_win()                *utils.with_restore_current_win*


utils.with_restore_current_buf()                *utils.with_restore_current_buf*


utils.is_terminal()                                          *utils.is_terminal*


utils.is_config({arg})                                         *utils.is_config*

    Parameters: ~
        {arg}  (table|nil)  @optional config table


Generated by lemmy-help <https://github.com/numToStr/lemmy-help> and 
panvimdoc <https://github.com/kdheepak/panvimdoc>


